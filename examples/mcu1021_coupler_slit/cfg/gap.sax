
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")       # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "1")       # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")      # Encoder velocity Low pass filter size

############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")       # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "1")       # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")      # Trajectory velocity Low pass filter size

############# Commands 
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",  "1")        # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",       "1")        # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "if(ax3.traj.source){ax3.drv.enable:=ax1.drv.enable+ax2.drv.enable|}|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "if(ax4.traj.source){ax4.drv.enable:=ax1.drv.enable+ax2.drv.enable|}|")

epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "ax2.enc.actpos:=ax4.enc.actpos-ax3.enc.actpos|")

# Dynamic softlimits
# High softlimit is when gap is positive xl(4) will go to softlim+ or xr(3) will go to softlim-  (take min of those two)
epicsEnvSet(SW_FW_BASED_ON_AX3,"(ax1.enc.actpos - ax3.mon.lowsoftlim - $(SOFT_OFFSET=2)) * 2")
epicsEnvSet(SW_FW_BASED_ON_AX4,"(ax4.mon.highsoftlim - ax1.enc.actpos - $(SOFT_OFFSET=2)) * 2")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "ax2.mon.highsoftlim:=min(${SW_FW_BASED_ON_AX4},${SW_FW_BASED_ON_AX3})|")

# Both softlimits of the physical axis must be enabled in order for this code to work
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "ax2.mon.highsoftlimenable:=ax4.mon.highsoftlimenable and ax3.mon.highsoftlimenable|")

# Low softlimit is when gap is negative xl(4) will go to softlim- or xr(3) will go to softlim+  (take max of those two)
epicsEnvSet(SW_BW_BASED_ON_AX3,"-(ax3.mon.highsoftlim - ax1.enc.actpos + $(SOFT_OFFSET=2)) * 2")
epicsEnvSet(SW_BW_BASED_ON_AX4,"-(ax1.enc.actpos - ax4.mon.lowsoftlim + $(SOFT_OFFSET=2)) * 2")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "ax2.mon.lowsoftlim:=max(${SW_BW_BASED_ON_AX3},${SW_BW_BASED_ON_AX4})|")

# Both softlimits of the physical axis must be enabled in order for this code to work
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "ax2.mon.lowsoftlimenable:=ax4.mon.lowsoftlimenable and ax3.mon.lowsoftlimenable|")

epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "ax2.mon.ilockfwd:=ax3.mon.highlim and ax4.mon.highlim |")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "ax2.mon.ilockbwd:=ax3.mon.lowlim and ax4.mon.lowlim |")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")

# This is xg axis
#
#     limit+      softlim+          xl4            xr3          softlim-    lim√≠t-
#       |            |               |              |              |         |
#                                     <----xg2----->
#                                          xp1                                      
# 

# Cleanup
epicsEnvUnset(SW_FW_BASED_ON_AX3)
epicsEnvUnset(SW_FW_BASED_ON_AX4)
epicsEnvUnset(SW_BW_BASED_ON_AX3)
epicsEnvUnset(SW_BW_BASED_ON_AX4)
